Домашнее задание по темам
«Generics, Коллекции»
Задание 1:
Реализовать метод, который на вход принимает ArrayList<T>, а возвращает набор
уникальных элементов этого массива. Решить, используя коллекции
Part1
Создала метод для извлечения уникальных элементов из списка
Присвоила новый список для хранения уникальных элементов
Описала цикл для проверки по каждому элементу списка, не содержится ли элемент уже в списке уникальных
и если элемент уникален, добавляю его в uniqueList.
Закрываю цикл возвратом списка с уникальными элементами.
Создала и заполнила ArrayList список данными по умолчанию и вывела в консоль результат списка с уникальными элементами.

Задание 2:
С консоли на вход подается две строки s и t. Необходимо вывести true, если одна
строка является валидной анаграммой другой строки, и false – если это не так.
Анаграмма – это слово, или фраза, образованная путем перестановки букв другого
слова или фразы, обычно с использованием всех исходных букв ровно один раз.
Для проверки:
● Бейсбол – бобслей
● Героин – регион
● Клоака – околка
Part2
Импортировала библиотеки HashMap, Map, Scanner.
Создала класс и метод проверки длина строк, если длина разная, то исключать сразу из анаграмм.
Использовала HashMap для подсчета частоты символов в элементах.
Выполнила проверку символов первой и второй строк, если символ не найден в первой, возвращаем false
Если все значения в HashMap равны нулю, значит строки являются анаграммами, возвращаем true.
Создала метод для ввода данных из консоли и выполняем проверку с выводом true или false, являются ли введенные слова анаграммами или нет.

Задание 3:
Реализовать класс PowerfulSet, в котором должны быть следующие методы:
● public <T> Set<T> intersection(Set<T> set1, Set<T> set2) – возвращает
пересечение двух наборов.
Пример: set1 = {1, 2, 3}, set2 = {0, 1, 2, 4}. Вернуть {1, 2}
● public <T> Set<T> union(Set<T> set1, Set<T> set2) – возвращает
объединение двух наборов
Пример: set1 = {1, 2, 3}, set2 = {0, 1, 2, 4}. Вернуть {0, 1, 2, 3, 4}
● public <T> Set<T> relativeComplement(Set<T> set1, Set<T> set2) –
возвращает элементы первого набора без тех, которые находятся также и
во втором наборе.
Пример: set1 = {1, 2, 3}, set2 = {0, 1, 2, 4}. Вернуть {3}

Part3
Импортировала библиотеки HashSet, Set.
Создала класс PowerfulSet.
Определила пересечение двух множеств и оставила только элементы, которые есть в обоих.
Выполнила объединения двух множеств, к первому добавила элементы второго.
Выполнила поиск дополнения (тех элементов первого множества, которых нет во втором и
удалила из первого множества элементы, которые есть во втором).
Выполнила присваивание данных по умолчанию.
Вывела в консоль результат обработки: пересечения, объединения и дополнения.


